
#include <stdio.h>
#include <stdlib.h>
struct Queue
{
    int size;
    int front; //used for deletion
    int rear; //used for insertion
    int *Q; //for array
};

void create(struct Queue *q)
{
    printf("Enter the size");
    scanf("%d",&q->size);
    q->Q = (int *)malloc(q->size * sizeof(int));
    q->front = q->rear = -1;
    
}

//call by address
void enqueue(struct Queue *q, int x)
{
    if(q->rear == q->size-1) printf("Queue is full");
    else
    {
        q->rear++;
        q->Q[q->rear] = x;
    }
    
}

int dequeue(struct Queue *q)
{
    int x = -1;
    if(q->front == q->rear) printf("queue is empty");
    else
    {
        q->front++;
        x = q->Q[q->front];
    }
    return x;
}

void Display(struct Queue q)
{
    for(int i=q.front+1; i<=q.rear; i++)
    {
        printf("%d ",q.Q[i]);
    }
}
int isEmpty(struct Queue q)
{
    return (q.rear == -1)?1:0;
}

int isFull(struct Queue q)
{
    return (q.rear == q.size-1)?1:0;
}

int main()
{
    struct Queue q;
    create(&q);
    enqueue(&q,4);
    enqueue(&q,2);
    enqueue(&q,6);
    enqueue(&q,0);
    enqueue(&q,8);
    dequeue(&q);
    Display(q);
  
    return 0;
}

