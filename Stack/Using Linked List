#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

struct Node
{
    int data;
    struct Node *next;
}*top = NULL;


void Display()
{
    struct Node *p=top;
    while(p)
    {
        printf("%d ",p->data);
        p = p->next;
    }
}
void push(int x)
{
    struct Node *t;
    t = (struct Node*)malloc(sizeof(struct Node));
    if(t == NULL) printf("stack is full");
    else
    {
        t->data = x;
        t->next = top;
        top = t;
    }
}

int pop()
{
    struct Node *t=top;
    int x = INT_MIN;
    if(top == NULL) printf("stack underflow");
    else
    {
        t = top;
        x = top->data;
        top = top->next;
        free(t);
    }
    return x;
}

int peek(int pos)
{
    int x= INT_MIN;
    struct Node *t = top;
    if(top == NULL || pos<=0) return x;
    else
    {
        for(int i=0; i<pos-1 && t!=NULL;i++)
        {
            t=t->next;
        }
        if(t!=NULL)
        x = t->data;
    }
    return x;
}

int isEmpty()
{
    return top?0:1;
}

int isFull()
{
    struct Node *t = (struct Node*)malloc(sizeof(struct Node));
    int r = t?1:0;
    free(t);
    return r;
    
}

int stackTop()
{
    if(top)
    {
        printf("%d",top->data);
    }
    else return -1;
}
int main()
{
    push(5);
    push(4);
    push(8);
    Display();

    return 0;
}
